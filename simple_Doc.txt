SIMPLE DOCUMENTATION(V-1.0)
(IMPORTANT NOTE)
	Forbiden characters:
		'&', '|'
CONSOLE PRINT FUNCTIONALITY (print):
	Simple interfaces with the c++ equivalent cout. Simple uses the syntax print. 
	For example to print "hello world"; one must use:
								print"hello world"
CONSOLE PRINT FUNCTIONALITY (VAR):
	To print stored variable(eg @ temp) use:
								print temp
	Take note of the space when printing a VAR and none when direct string.
CONSOLE VAR FUNCTONALITY:
	Store any datatype with:
								VAR name data
	This example stores data at variable name.
CONSOLE OPPERAND FUNCTONALITY:
	Perform arithmetic with (*, /, +, -, %):
								c=a+b
								c=5*6
								
COMMENTS($):
	Lines starting with $ will be ignored by the interpreter.
FOR(for):
	For loop executed in format:
								for start~increment>end(i)[
								$code
								]
	Start increment and end are only accepted as integers and are automatically rounded down.
IF LOGIC(if)
	Executes expression if bool is true:
								if(true){
								$code
								}
								eif(true){
								$code
								}
								else{
								$code
								}
BOOL()
	Bool data type is indistinguishable from the string true and can be stored in the same way. moreover one can compare ints and strings with the '==' operator or, '!='. The use of '>=', '<=' is limited to numerical comparisons and is possible with type double; but is only effective with type int. Mathematical operations are not supported within a logic comparison.

STRING TO INT(isaacIsBad())
	Converts data type int to its sentence structor equivalent:
								issacIsBad(33)
								$outputs "thirty-three"

GENERIC ALGORITHMS:
	Examples:
	
	1. fibonacci sequence(prints 20 values of the fibonacci sequence using basic integer math and a for loop)

print"fibonacci sequence:"
VAR a 0
VAR b 1
VAR sum 0
for 0~1>20(i)[
a=b
b=sum
sum=a+b
print sum
]
ISAAC IS BAD:
	this function will return the sentence value of any integer:
								
								isaacIsBad(1234)

